# android

İlk olarak DB Browser for SQLite ta projemizi oluşturuyoruz. Projemizi Oluşturduktan sonra Anroid Studio dan yeni proje acıyoruz.
proje açıldıktan sonra app=>NEW=>Folder=>Assets Folder diyerek bir assets adında yeni bir klasör oluşturmuz oluyoruz.
Daha sonra assets klasörüne sağ tıklayıp Show İn Explorer deyim assets klasörüne olşuturmuş olduuğumuz veri tabanını atıyoruz.

Daha sonra DataBaseHelper adında yeni bir sınıf oluşturuyoruz. Bu sınıfa Aşağıdaki kodları yapıştırabilirsiniz.



public class DatabaseHelper extends SQLiteOpenHelper {

    static String DB_PATH;
    public static final int Database_Version = 2;
    //Veritabanı ismini veriyoruz
    static String DB_NAME = "sorular.db";

    SQLiteDatabase myDatabase;

    final Context myContext;

    public DatabaseHelper(Context context)
    {
        super(context, DB_NAME, null, Database_Version);

        DB_PATH =context.getFilesDir().getParent() + "/databases/";

        this.myContext = context;
    }
    //Assest dizinine koyduğumuz sql dosyasını, Android projesi içine oluşturma ve kopyalamna işlemi yapıldı..
    public void CreateDataBase()
    {
        boolean dbExists = checkDataBase();

        if (!dbExists)
        {
            this.getReadableDatabase();

            try
            {
                copyDataBase();
            }
            catch (Exception ex)
            {
                Log.w("hata","Veritabanı kopyalanamıyor");
                throw new Error("Veritabanı kopyalanamıyor.");
            }
        }
    }
    //Sqlite veritabanı dosyasını açıp, veritabanımı kontrol ediyoruz
    boolean checkDataBase()
    {
        SQLiteDatabase checkDB = null;

        try
        {
            String myPath = DB_PATH + DB_NAME;

            checkDB = SQLiteDatabase.openDatabase(myPath, null, SQLiteDatabase.OPEN_READONLY);
        }
        catch (Exception ex)
        {
            Log.w("hata","Veritabanı açılamadı");
        }

        if (checkDB != null)
            checkDB.close();

        return checkDB != null ? true : false;
    }
    ///Assest dizinine koyduğumuz sql dosyasındaki verileri kopyalıyoruz
    void copyDataBase()
    {
        try
        {
            InputStream myInput = myContext.getAssets().open(DB_NAME);

            String outFileName = DB_PATH + DB_NAME;

            OutputStream myOutput = new FileOutputStream(outFileName);

            byte[] buffer = new byte[1024];

            int length;

            while ((length = myInput.read(buffer)) > 0)
            {
                myOutput.write(buffer, 0, length);
            }

            myOutput.flush();

            myInput.close();
            myOutput.close();
        }
        catch (Exception ex)
        {
            Log.w("hata", "Kopya oluşturma hatası.");
        }
    }
    //Veritabannı açma işlemi yapıldı

    void openDataBase()
    {
        String myPath = DB_PATH + DB_NAME;

        myDatabase = SQLiteDatabase.openDatabase(myPath, null, SQLiteDatabase.OPEN_READWRITE);
    }

    @Override
    public synchronized void close()
    {
        if (myDatabase != null && myDatabase.isOpen())
            myDatabase.close();

        super.close();
    }

    @Override
    public void onCreate(SQLiteDatabase db) {
        copyDataBase();
    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {

    }


}


Bunu DataBaseHelper class ına atıktan sonra projemizin ana sayfasında veri tabanındaki bilgileri kullanabilmek için şu kodları kullanmamız gerekmektedir.

{
 QLiteDatabase db;
 DatabaseHelper dbHelper = new DatabaseHelper(this);
        try {
            dbHelper.CreateDataBase();
            db = dbHelper.getReadableDatabase();
            String[] getColumnName = {"soru,cevap,A,B,C,D"};
            Cursor crs = db.query("sorular", getColumnName, "_id = ?", new String[]{String.valueOf(sayilar[sayi])}, null, null, null);

            if (crs.getCount() > 0) {
                crs.moveToFirst();
                txtSoru.setText(crs.getString(crs.getColumnIndex("soru")));
                btnA.setText(crs.getString(crs.getColumnIndex("A")));
                btnB.setText(crs.getString(crs.getColumnIndex("B")));
                btnC.setText(crs.getString(crs.getColumnIndex("C")));
                btnD.setText(crs.getString(crs.getColumnIndex("D")));
                cevap = crs.getString(crs.getColumnIndex("cevap"));
            }
            crs.close();
            db.close();
}

Bu şekilde dışarıda oluşturmuş olduğumuz veritabanını böylece projemizde kullanmış olacağız.
